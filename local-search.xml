<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/03/07/PicGo/"/>
    <url>/2021/03/07/PicGo/</url>
    
    <content type="html"><![CDATA[<h1 id="PicGo图床"><a href="#PicGo图床" class="headerlink" title="PicGo图床"></a>PicGo图床</h1><h2 id="1-下载PicGo"><a href="#1-下载PicGo" class="headerlink" title="1. 下载PicGo"></a>1. 下载PicGo</h2><p><a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p><h2 id="2-安装PivcGo"><a href="#2-安装PivcGo" class="headerlink" title="2. 安装PivcGo"></a>2. 安装PivcGo</h2><p>直接运行.exe</p><h2 id="3-新建一个github仓库"><a href="#3-新建一个github仓库" class="headerlink" title="3. 新建一个github仓库"></a>3. 新建一个github仓库</h2><p>mycdn</p><h2 id="4-生成token"><a href="#4-生成token" class="headerlink" title="4.生成token"></a>4.生成token</h2><p>[进入github] -&gt; [点击头像] -&gt; [settings] -&gt; [Developers settings] -&gt; [Personal access token]</p><blockquote><p> 必须勾选repo</p></blockquote><p>生成后必须复制token，只显示一次</p><blockquote><p>0cb447c7cb66f97f8dd645d1b30f88b3bda94198</p></blockquote><h2 id="5-配置PicGo"><a href="#5-配置PicGo" class="headerlink" title="5. 配置PicGo"></a>5. 配置PicGo</h2><p>打开PicGo左栏依次选择[图床设置] -&gt; [github图床]</p><p>格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">仓库名： 你的用户名/仓库名<br>分支： main<br>Token： <span class="hljs-number">0</span>cb447c7cb66f97f8dd645d1b30f88b3bda94198<br>存储路径： img/  <span class="hljs-comment"># 表示上传到你的仓库的img目录下</span><br>自定义域名格式： https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>LihengXu/mycdn<br></code></pre></td></tr></table></figure><p>因为github的服务器在国外，所以用来当图床的时候，国内的速度非常感人，但是我们可以使用<code>jsdelivr</code>提供的CDN服务，速度非常的快，基本不大的图片可以秒开。</p><p>所以上述<strong>自定义域名</strong>实际上是使用的<code>jsdelivr</code>的CDN服务。</p><h2 id="6-上传图片"><a href="#6-上传图片" class="headerlink" title="6. 上传图片"></a>6. 上传图片</h2><p>点击上传区，选择github图床</p><p>示例</p><p>![我的头像](<a href="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/my">https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/my</a> fig.png)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/03/07/hexo%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/03/07/hexo%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="HEXO框架搭建个人博客"><a href="#HEXO框架搭建个人博客" class="headerlink" title="HEXO框架搭建个人博客"></a>HEXO框架搭建个人博客</h1><h2 id="一、-环境搭建"><a href="#一、-环境搭建" class="headerlink" title="一、 环境搭建"></a>一、 环境搭建</h2><h3 id="1-nodejs安装"><a href="#1-nodejs安装" class="headerlink" title="1. nodejs安装"></a>1. nodejs安装</h3><h4 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h4><p>下载地址（选择<strong>LTS</strong>稳定版）：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><blockquote><p>下载之后直接默认安装，一路next（建议不要放在C盘）</p></blockquote><h4 id="1-2-测试nodejs"><a href="#1-2-测试nodejs" class="headerlink" title="1.2 测试nodejs"></a>1.2 测试nodejs</h4><p>打开windows的命令行工具输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br></code></pre></td></tr></table></figure><p>显示版本号则安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_1_%E6%B5%8B%E8%AF%95nodejs%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png"></p><h4 id="1-3-测试npm"><a href="#1-3-测试npm" class="headerlink" title="1.3 测试npm"></a>1.3 测试npm</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> npm是nodejs安装时默认安装的</span><br><span class="hljs-meta">#</span><span class="bash"> 直接在windows的命令行工具输入</span><br>npm -v<br></code></pre></td></tr></table></figure><p>显示如下则安装成功, npm管理工具用于安装Hexo框架</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_2_%E6%B5%8B%E8%AF%95npm%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png"></p><h4 id="1-4-安装nrm（需要一点耐心）"><a href="#1-4-安装nrm（需要一点耐心）" class="headerlink" title="1.4 安装nrm（需要一点耐心）"></a>1.4 安装nrm（需要一点耐心）</h4><blockquote><p> nrm的安装原因：需要切换下载源到国内镜像源，提升下载速度</p></blockquote><ul><li>默认npm的全局安装路径在C盘，我们需要修改到nodejs的安装目录，新建两个文件夹: <code>node_global_modules</code> 和 <code>node_cache</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_3_%E4%BF%AE%E6%94%B9npm%E9%BB%98%E8%AE%A4%E5%85%A8%E5%B1%80%E8%B7%AF%E5%BE%84.png"></p><ul><li><p>在命令行执行以下两条命令修改npm配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set prefix &quot;D:\Java\nodejs\node_modules\npm\node_global_modules&quot;<br>npm config set cache &quot;D:\Java\nodejs\node_modules\npm\node_cache&quot;<br></code></pre></td></tr></table></figure></li><li><p>执行后输入以下命令，查看npm配置结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config ls<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_4_npm%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%88%90%E5%8A%9F.png"></p><ul><li>验证配置成功后，需要配置环境变量。在环境变量中，新建一个系统变量，变量名：<code>NODE_HOME</code>，变量值：<code>D:\dev\nodejs</code>，效果如图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_5_%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8FNODE_HOME.png"></p><ul><li><p>在系统环境变量<code>Path</code>变量名中，新建变量值：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">%</span><span class="bash">NODE_HOME%</span><br><span class="hljs-meta">%</span><span class="bash">NOED_HOME%\node_modules</span><br><span class="hljs-meta">%</span><span class="bash">NODE_HOME%\node_modules\npm\node_global_modules\</span><br></code></pre></td></tr></table></figure></li></ul><p>效果如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_6_%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%88%B0path.png"></p><ul><li><p>保存后重新打开命令行工具，执行性全局安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install nrm -g<br></code></pre></td></tr></table></figure><p>安装结束后如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_7_nrm%E5%AE%89%E8%A3%85%E7%BB%93%E6%9E%9C.png"></p></li><li><p>在命令行输入指令查看下载源，可能会报错如下图：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm ls<br></code></pre></td></tr></table></figure><p>![](<a href="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_8_nrm">https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo搭建_8_nrm</a> ls报错.png)</p></li><li><p>找到nrm目录(错误第四行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">at Object.&lt;anonymous&gt; (D:\Java\nodejs\node_modules\npm\node_global_modules\node_modules\nrm\cli.js:17:20)<br></code></pre></td></tr></table></figure></li><li><p>打开cli.js 第17行修改成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//const NRMRC = path.join(process.env.HOME, &#x27;.nrmrc&#x27;); (删除)</span><br><span class="hljs-keyword">const</span> NRMRC = path.join(process.env[(process.platform == <span class="hljs-string">&#x27;win32&#x27;</span>) ? <span class="hljs-string">&#x27;USERPROFILE&#x27;</span> : <span class="hljs-string">&#x27;HOME&#x27;</span>], <span class="hljs-string">&#x27;.nrmrc&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li><p>重新输入<code>nrm ls</code>查看下载源</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_9_%E6%9F%A5%E7%9C%8Bnrm%E4%B8%8B%E8%BD%BD%E6%BA%90.png"></p></li><li><p>修改下载源指令，推荐选择taobao</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm use taobao # 选择淘宝<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-安装Hexo框架"><a href="#2-安装Hexo框架" class="headerlink" title="2. 安装Hexo框架"></a>2. 安装Hexo框架</h3><h4 id="2-1-安装hexo-cli脚手架"><a href="#2-1-安装hexo-cli脚手架" class="headerlink" title="2.1 安装hexo-cli脚手架"></a>2.1 安装hexo-cli脚手架</h4><p>打开命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装成功如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_10_hexo-cli%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.png"></p><h4 id="2-2-验证hexo-cli安装成功"><a href="#2-2-验证hexo-cli安装成功" class="headerlink" title="2.2 验证hexo-cli安装成功"></a>2.2 验证hexo-cli安装成功</h4><p>命令行输入测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure><p>结果如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_11_hexo-cli%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85.png"></p><h3 id="3-安装Git"><a href="#3-安装Git" class="headerlink" title="3. 安装Git"></a>3. 安装Git</h3><p>具体可以参考我的<a href="https://gitee.com/lihengxu/gitstudy">Git总结</a></p><h2 id="二、使用Hexo搭建博客"><a href="#二、使用Hexo搭建博客" class="headerlink" title="二、使用Hexo搭建博客"></a>二、使用Hexo搭建博客</h2><h3 id="1-创建项目文件夹子"><a href="#1-创建项目文件夹子" class="headerlink" title="1. 创建项目文件夹子"></a>1. 创建项目文件夹子</h3><p>在本地硬盘创建并进入项目文件夹（blog），并在该文件夹下打开命令行工具</p><h3 id="2-初始化blog项目"><a href="#2-初始化blog项目" class="headerlink" title="2. 初始化blog项目"></a>2. 初始化blog项目</h3><p>使用hexo命令初始化项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init<br></code></pre></td></tr></table></figure><p>初始化项目文件如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_12_blog%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E6%96%87%E4%BB%B6.png"></p><h3 id="3-运行hexo服务预览博客"><a href="#3-运行hexo服务预览博客" class="headerlink" title="3. 运行hexo服务预览博客"></a>3. 运行hexo服务预览博客</h3><p>在当前路径下输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo s<br></code></pre></td></tr></table></figure><p>命令行出现访问路径，直接点击访问即可</p><p>默认样式如图：</p><p><img src="https://cdn.jsdelivr.net/gh/LihengXu/mycdn/img/hexo%E6%90%AD%E5%BB%BA_13_hexo%E5%8D%9A%E5%AE%A2%E9%A2%84%E8%A7%88.png"></p><h3 id="4-创建文章"><a href="#4-创建文章" class="headerlink" title="4. 创建文章"></a>4. 创建文章</h3><p>在当前路径下输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo n &#x27;hexo test&#x27;<br></code></pre></td></tr></table></figure><p>回车后出现以标题命名的.md文件路径，打开该文件编辑文章内容</p><h3 id="5-更新文章"><a href="#5-更新文章" class="headerlink" title="5. 更新文章"></a>5. 更新文章</h3><p>命令行输入指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean # 清理缓存<br>hexo g # 解析生成<br>hexo s # 运行hexo服务预览博客<br></code></pre></td></tr></table></figure><h2 id="三、-博客部署到GitHub"><a href="#三、-博客部署到GitHub" class="headerlink" title="三、 博客部署到GitHub"></a>三、 博客部署到GitHub</h2><h3 id="1-登陆GitHub创建仓库"><a href="#1-登陆GitHub创建仓库" class="headerlink" title="1. 登陆GitHub创建仓库"></a>1. 登陆GitHub创建仓库</h3><p>创建仓库命：LihengXu.github.io (注意第一个.前面一定是账户名)</p><h3 id="2-在本地目录安装git部署插件"><a href="#2-在本地目录安装git部署插件" class="headerlink" title="2. 在本地目录安装git部署插件"></a>2. 在本地目录安装git部署插件</h3><p>在项目根目录下打开命令行工具输入如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install --save hexo-deployer-git # --save 表示只在本目录下安装<br></code></pre></td></tr></table></figure><h3 id="3-修改项目根目录下的配置文件"><a href="#3-修改项目根目录下的配置文件" class="headerlink" title="3. 修改项目根目录下的配置文件"></a>3. 修改项目根目录下的配置文件</h3><p>找到<code>_config.yaml</code>文件</p><p>找到最下面的<code>deploy：type</code> 进行编辑:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/LihengXu/LihengXu.github.io.git</span> <br>  <span class="hljs-comment"># repo : github上创建的仓库地址</span><br>  <span class="hljs-string">branch：</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h3 id="4-部署到GitHub"><a href="#4-部署到GitHub" class="headerlink" title="4. 部署到GitHub"></a>4. 部署到GitHub</h3><p>项目根目录下打开命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo d<br></code></pre></td></tr></table></figure><p>提示你输入GitHub账户和密码后将大妈提交到GitHub仓库</p><p>通过<a href="LihengXu.github.io">GitHub链接</a>可访问博客</p><h2 id="四、-更换主题"><a href="#四、-更换主题" class="headerlink" title="四、 更换主题"></a>四、 更换主题</h2><h3 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1. 下载主题"></a>1. 下载主题</h3><p>将主题文件下载到本地项目的<code>theme</code>文件夹</p><p>在本地项目根目录下打开命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><h3 id="2-修改配置-config-yml"><a href="#2-修改配置-config-yml" class="headerlink" title="2. 修改配置 _config.yml"></a>2. 修改配置 _config.yml</h3><p>找到<code>#Extensions</code>项的theme</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure><h3 id="3-更新并重新部署"><a href="#3-更新并重新部署" class="headerlink" title="3. 更新并重新部署"></a>3. 更新并重新部署</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean # 清理缓存<br>hexo g # 解析生成<br>hexo s # 运行hexo服务预览<br>hexo d # 部署到github<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
